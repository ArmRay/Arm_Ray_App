{
    "swagger": "2.0",
    "info": {
        "version": "0.0.1",
        "title": "ArmRay API",
        "description": "Definition of ArmRay backend API"
    },
    "schemes": [
        "http"
    ],
    "basePath": "/armray/api/0.1/rest",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "paths": {
        "/Users": {
            "get": {
                "description": "Gets `User` objects.\nRequired query param of **size** determines\nmax number of results per page, and **page** determines\nwhich page in the pagination we are. Remaining params optional.\n",
                "operationId": "getUsers",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "size",
                        "in": "formData",
                        "description": "Max size of array to return",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "formData",
                        "description": "Location in pagination",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "first_name",
                        "in": "formData",
                        "description": "first name of user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "formData",
                        "description": "last name of user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_collaborator",
                        "in": "formData",
                        "description": "is user a collaborator?",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "is_creator",
                        "in": "formData",
                        "description": "is user a creator?",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "city",
                        "in": "formData",
                        "description": "city location of user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "formData",
                        "description": "state location of user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "university_ids",
                        "in": "formData",
                        "description": "universities a user is associated with",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "project_id",
                        "in": "formData",
                        "description": "project_id the user is associated with",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_date",
                        "in": "formData",
                        "description": "date the user was created",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "modified_date",
                        "in": "formData",
                        "description": "date the user was modified",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "keywords",
                        "in": "formData",
                        "description": "keyword",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "An array of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Users/uni/{university_id}": {
            "get": {
                "tags": [
                    "User",
                    "University"
                ],
                "description": "Retrieve `User` objects at a particular `University`\n",
                "operationId": "getUsersByUniversityId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "university_id",
                        "in": "path",
                        "description": "ID of 'User' to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "max",
                        "in": "formData",
                        "description": "max num of 'User' to fetch",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "formData",
                        "description": "page in pagination",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Users/projects/{project_id}": {
            "get": {
                "tags": [
                    "User",
                    "Project"
                ],
                "description": "Retrieve `User` objects on a particular `Project`\n",
                "operationId": "getUsersByProjectId",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "ID of 'Project' to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "max",
                        "in": "formData",
                        "description": "max num of 'User' to fetch",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "formData",
                        "description": "page in pagination",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Users/created/{created_date}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve `User` objects created on or after the given date\n",
                "operationId": "getUsersByCreatedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "created_date",
                        "in": "path",
                        "description": "Date that `User` object was created",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Users/created": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve `User` objects created on or after the given date2\n",
                "operationId": "getUsersByCreatedDateForm",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "created_date",
                        "in": "formData",
                        "description": "Date that `User` object was created",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Users/modified/{modified_date}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve `User` objects created on or after the given date\n",
                "operationId": "getUsersByModifiedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modified_date",
                        "in": "path",
                        "description": "Date that `User` object was modified",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Users/modified_date": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve `User` objects created on or after the given date\n",
                "operationId": "getUsersByModifiedDateForm",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modified_date",
                        "in": "formData",
                        "description": "Date that `User` object was modified",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Users/keys": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve `User` objects based on keywords\n",
                "operationId": "getUsersByKeywords",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "keywords",
                        "in": "formData",
                        "description": "Keywords when searching for user",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User": {
            "post": {
                "description": "Creates `User` objects. `University` and `Project` are optional (user may not yet have affiliations)\n`Keywords` also optional. All other fields required.\n",
                "operationId": "createUser",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "formData",
                        "description": "first name of `User`",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "formData",
                        "description": "last name of `User`",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "is_collaborator",
                        "in": "formData",
                        "description": "is `User` a collaborator?",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "is_creator",
                        "in": "formData",
                        "description": "is `User` a creator?",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "city",
                        "in": "formData",
                        "description": "city location of `User`",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "formData",
                        "description": "state location of `User`",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "university_ids",
                        "in": "formData",
                        "description": "university a `User` is associated with",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "project_id",
                        "in": "formData",
                        "description": "project_id the `User` is associated with",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "keywords",
                        "in": "formData",
                        "description": "keyword",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the created user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}": {
            "put": {
                "description": "Updates a `User` object. All fields other than `id` optional.\n",
                "operationId": "updateUser",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of `User` to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "formData",
                        "description": "first name of `User`",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "formData",
                        "description": "last name of `User`",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_collaborator",
                        "in": "formData",
                        "description": "is `User` a collaborator?",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "is_creator",
                        "in": "formData",
                        "description": "is `User` a creator?",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "city",
                        "in": "formData",
                        "description": "city location of `User`",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "formData",
                        "description": "state location of `User`",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "university",
                        "in": "formData",
                        "description": "university a `User` is associated with",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "project_id",
                        "in": "formData",
                        "description": "project_id the `User` is associated with",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "keywords",
                        "in": "formData",
                        "description": "keyword",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the updatee `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "Delete a 'User' by their id.\n",
                "operationId": "deleteUserById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the `id` of the `User` to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the deleted `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve a 'User' by their id.\n",
                "operationId": "getUserById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the `id` of the `User` to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the deleted `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/uni/{university_id}": {
            "get": {
                "tags": [
                    "User",
                    "University"
                ],
                "description": "Is 'University' associated with a `User`?\n",
                "operationId": "isUniversityOnUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "university_id",
                        "in": "path",
                        "description": "The `university_id` of the `University` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `University` associated with the `User`",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User",
                    "University"
                ],
                "description": "Add a 'University' to a `User`.\n",
                "operationId": "settUserUniversityById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "university_id",
                        "in": "path",
                        "description": "The `university_id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `university_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User",
                    "University"
                ],
                "description": "Remove a 'University' fromo a `User`.\n",
                "operationId": "deleteUserUniversityById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "university_id",
                        "in": "path",
                        "description": "The `university_id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/project": {
            "get": {
                "tags": [
                    "User",
                    "Project"
                ],
                "description": "Retrieve all 'Project' associated with a `User`.\n",
                "operationId": "getAllUserProjectById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Project` associated with the `User`",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User",
                    "Project"
                ],
                "description": "Remove all 'Project' ojects from a `User`.\n",
                "operationId": "deleteAllUserProjectById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/project/{project_id}": {
            "get": {
                "tags": [
                    "User",
                    "Project"
                ],
                "description": "Is 'Project' associated with a `User`?\n",
                "operationId": "isUserOnProjectById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "The `project_id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User",
                    "Project"
                ],
                "description": "Add a 'Project' to a `User`.\n",
                "operationId": "settUserProjectById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "The `project_id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User",
                    "Project"
                ],
                "description": "Remove a 'Project' from a `User`.\n",
                "operationId": "deleteUserProjectById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "The `project_id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/review": {
            "get": {
                "tags": [
                    "User",
                    "Review"
                ],
                "description": "Retrieve all 'Review' associated with a `User`.\n",
                "operationId": "getAllUserReviewById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of reviews",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User",
                    "Review"
                ],
                "description": "Remove all 'Review' ojects from a `User`.\n",
                "operationId": "deleteAllUserReviewById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/review/{review_id}": {
            "get": {
                "tags": [
                    "User",
                    "Review"
                ],
                "description": "Is a 'Review' associated with a `User`??\n",
                "operationId": "isReviewOnUserById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "review_id",
                        "in": "path",
                        "description": "The `review_id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User",
                    "Review"
                ],
                "description": "Add a 'Review' to a `User`.\n",
                "operationId": "setUserReviewById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "review_id",
                        "in": "path",
                        "description": "The `review_id` of the `Review` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `review_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User",
                    "Review"
                ],
                "description": "Remove a 'Review' from a `User`.\n",
                "operationId": "deleteUserReviewById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "review_id",
                        "in": "path",
                        "description": "The `review_id` of the `Review` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `review_id` associated with the `Review`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/images": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve all images associated with a `User`.\n",
                "operationId": "getAllUserImages",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The image url associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Add images to a `User`.\n",
                "operationId": "setUserImages",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "images",
                        "in": "formData",
                        "description": "The paths of the images",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "Remove an image, or multiple images, from a `User`.\n",
                "operationId": "deleteImagesFromUserById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "images",
                        "in": "formData",
                        "description": "The paths of the images",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/keys": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve all keywords associated with a `User`.\n",
                "operationId": "getAllUserKeywords",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of keywords",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Add keywords to a `User`.\n",
                "operationId": "setUserKeywords",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keywords",
                        "in": "formData",
                        "description": "The keywords",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "Delete keywords from a user\n",
                "operationId": "deleteKeywordsFromUserById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/keys/{keyword}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Check if a keyword is on a `User`.\n",
                "operationId": "isUserHaveKeyword",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "The keyword",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Add a keyword to a `User`.\n",
                "operationId": "setUserKeyword",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "The keyword",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "Delete keyword from a user\n",
                "operationId": "deleteKeywordFromUserById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "The keyword",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/first_name": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve first name associated with a `User`.\n",
                "operationId": "getFirstNameById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of keywords",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User",
                    "Review"
                ],
                "description": "Delete first_name from a user\n",
                "operationId": "deleteUserFirstName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/first_name/{first_name}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Check if first name is on `User`\n",
                "operationId": "isUserFirstName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "path",
                        "description": "The keywords",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Add first name to a `User`.\n",
                "operationId": "addUserFirstName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "path",
                        "description": "The keywords",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "description": "Modify first name of a `User`.\n",
                "operationId": "modifyUserFirstName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "path",
                        "description": "The keywords",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/last_name": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve first name associated with a `User`.\n",
                "operationId": "getLastNameById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of keywords",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "Delete last_name from a user\n",
                "operationId": "deleteUserLastName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/last_name/{last_name}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Check if last name is on `User`.\n",
                "operationId": "isUserLastName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "path",
                        "description": "The keywords",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Add last name to a `User`.\n",
                "operationId": "addUserLastName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "path",
                        "description": "The keywords",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "description": "Modify last name of a `User`.\n",
                "operationId": "modifyUserLastName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "path",
                        "description": "The keywords",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/collaborator": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve if `User` is a collaborator.\n",
                "operationId": "isCollaboratorById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of keywords",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "set if `User` is a collaborator.\n",
                "operationId": "setIsUserCollaboratorById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "isCollaborator",
                        "in": "formData",
                        "description": "Is user a collaborator?",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "description": "set if `User` is a collaborator.\n",
                "operationId": "setIsUserCollaboratorByIdPut",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "isCollaborator",
                        "in": "formData",
                        "description": "Is user a collaborator?",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/creator": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve if `User` is a creator.\n",
                "operationId": "isCreatorById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of keywords",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "set if `User` is a creator.\n",
                "operationId": "setIsUserCreatorById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "isCreator",
                        "in": "formData",
                        "description": "Is user a creator?",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "description": "set if `User` is a creator.\n",
                "operationId": "setIsUserCreatorByIdPut",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "isCollaborator",
                        "in": "formData",
                        "description": "Is user a creator?",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/city": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve city associated with a `User`.\n",
                "operationId": "getCityNameById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The city",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "Delete city from a user\n",
                "operationId": "deleteUserCity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/city/{city}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Check if city is on `User`.\n",
                "operationId": "isUserCity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "path",
                        "description": "The city",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Add city to a `User`.\n",
                "operationId": "addUserCity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "path",
                        "description": "The city",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "description": "Modify city of a `User`.\n",
                "operationId": "modifyUserCity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "path",
                        "description": "The city",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/state": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve state associated with a `User`.\n",
                "operationId": "getStateById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The state",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "Delete state from a user\n",
                "operationId": "deleteUserState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `user_id` associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/state/{state}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Check if state is on `User`.\n",
                "operationId": "isUserState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "path",
                        "description": "The state",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Add state to a `User`.\n",
                "operationId": "addUserState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "path",
                        "description": "The state",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "description": "Modify state of a `User`.\n",
                "operationId": "modifyUserState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "path",
                        "description": "The state",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user_id associated with the `User`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/created": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve creation date of a `User`.\n",
                "operationId": "getCreatedDateById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/User/{id}/modified": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieve modified date of a `User`.\n",
                "operationId": "getModifiedDateById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Projects": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Gets `Project` objects.\nRequired query param of **size** determines\nmax number of results per page, and **page** determines\nwhich page in the pagination we are. Remaining params optional.\n",
                "operationId": "getProjects",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "size",
                        "in": "formData",
                        "description": "Max size of array to return",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "formData",
                        "description": "Location in pagination",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "project_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Unique identifier representing a specific project"
                    },
                    {
                        "name": "created_date",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "description": "datetime stamp of project creation"
                    },
                    {
                        "name": "updated_date",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "description": "datetime stamp of project update"
                    },
                    {
                        "name": "project_name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Project's name"
                    },
                    {
                        "name": "project_main_grant_type",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Project's grant type"
                    },
                    {
                        "name": "project_description",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Description of project"
                    },
                    {
                        "name": "project_creator_id",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project creator ids"
                    },
                    {
                        "name": "project_collaborators_id",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project collaborator ids"
                    },
                    {
                        "name": "project_keywords",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project keywords"
                    },
                    {
                        "name": "project_urls",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project URLs"
                    },
                    {
                        "name": "grant_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Grant ID"
                    },
                    {
                        "name": "university_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "ID of university hosting research"
                    },
                    {
                        "name": "grant_facilitator",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Name of individual fascilitating grant funding"
                    },
                    {
                        "name": "project_file",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "files for grant"
                    },
                    {
                        "name": "reviews",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "reviews"
                    },
                    {
                        "name": "posts",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "posts related to project"
                    },
                    {
                        "name": "is_project_private",
                        "in": "formData",
                        "required": false,
                        "type": "boolean",
                        "description": "is project private?"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Projects/uni/{university_id}": {
            "get": {
                "tags": [
                    "Project",
                    "University"
                ],
                "description": "Retrieve `Project` objects at a particular `University`\n",
                "operationId": "getProjectsByUniversityId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "university_id",
                        "in": "path",
                        "description": "ID of 'User' to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Projects/creator/{user_id}": {
            "get": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Retrieve `Project` objects by a particular creator `User`\n",
                "operationId": "getProjectsByCreatorId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of 'User' to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "projects response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Projects/collaborator/{user_id}": {
            "get": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Retrieve `Project` objects by a particular collaborator `User`\n",
                "operationId": "getProjectsByCollaboratorId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of 'User' to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "projects response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Projects/grant/{grant_id}": {
            "get": {
                "tags": [
                    "Project",
                    "Grant"
                ],
                "description": "Retrieve `Project` objects associated with a particular `Grant`\n",
                "operationId": "getProjectsByGrantId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "grant_id",
                        "in": "path",
                        "description": "ID of 'User' to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "projects response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Projects/created_date": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Retrieve `Project` objects created on or later than given date\n",
                "operationId": "getProjectsByCreatedDateForm",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "created_date",
                        "in": "formData",
                        "description": "date of creation",
                        "required": true,
                        "type": "string",
                        "format": "date-time-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "projects response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Projects/created_date/{created_date}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Retrieve `Project` objects created on or later than given date\n",
                "operationId": "getProjectsByCreatedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "created_date",
                        "in": "path",
                        "description": "date of creation",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "projects response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Projects/modified_date": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Retrieve `Project` objects modified on or later than given date\n",
                "operationId": "getProjectsByModifiedDateForm",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modified_date",
                        "in": "formData",
                        "description": "date modified",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "projects response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Projects/modified_date/{modified_date}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Retrieve `Project` objects modified on or later than given date\n",
                "operationId": "getProjectsByModifiedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modified_date",
                        "in": "path",
                        "description": "date modified",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "projects response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project": {
            "post": {
                "tags": [
                    "Project"
                ],
                "description": "Creates `Project` objects. **project_name**, **project_description**,\n**project_creator_id**, and **is_project_private** are required,\nall others optional.\n",
                "operationId": "createProject",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "project_name",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "Project's name"
                    },
                    {
                        "name": "project_main_grant_type",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Project's grant type"
                    },
                    {
                        "name": "project_description",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "Description of project"
                    },
                    {
                        "name": "project_creator_id",
                        "in": "formData",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project creator ids"
                    },
                    {
                        "name": "project_collaborators_id",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project collaborator ids"
                    },
                    {
                        "name": "project_keywords",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project keywords"
                    },
                    {
                        "name": "project_urls",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project URLs"
                    },
                    {
                        "name": "grant_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Grant ID"
                    },
                    {
                        "name": "university_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "ID of university hosting research"
                    },
                    {
                        "name": "grant_facilitator",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Name of individual fascilitating grant funding"
                    },
                    {
                        "name": "project_file",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "files for grant"
                    },
                    {
                        "name": "reviews",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "reviews"
                    },
                    {
                        "name": "posts",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "posts related to project"
                    },
                    {
                        "name": "is_project_private",
                        "in": "formData",
                        "required": true,
                        "type": "boolean",
                        "description": "is project private?"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the created user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}": {
            "put": {
                "tags": [
                    "Project"
                ],
                "description": "Updates a `Project` object. All fields other than `id` optional.\n",
                "operationId": "updateProject",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "project id"
                    },
                    {
                        "name": "project_name",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Project's name"
                    },
                    {
                        "name": "project_main_grant_type",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Project's grant type"
                    },
                    {
                        "name": "project_description",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Description of project"
                    },
                    {
                        "name": "project_creator_id",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project creator ids"
                    },
                    {
                        "name": "project_collaborators_id",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project collaborator ids"
                    },
                    {
                        "name": "project_keywords",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project keywords"
                    },
                    {
                        "name": "project_urls",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of project URLs"
                    },
                    {
                        "name": "grant_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Grant ID"
                    },
                    {
                        "name": "university_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "ID of university hosting research"
                    },
                    {
                        "name": "grant_facilitator",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Name of individual fascilitating grant funding"
                    },
                    {
                        "name": "project_file",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "files for grant"
                    },
                    {
                        "name": "reviews",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "reviews"
                    },
                    {
                        "name": "posts",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "posts related to project"
                    },
                    {
                        "name": "is_project_private",
                        "in": "formData",
                        "required": false,
                        "type": "boolean",
                        "description": "is project private?"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the updatee `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "description": "Delete a 'Project' by their id.\n",
                "operationId": "deleteProjectById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the `id` of the `Project` to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the deleted `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Retrieve a 'Project' by their id.\n",
                "operationId": "getProjectById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "the `id` of the `Project` to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the deleted `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/creators": {
            "get": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Get creators of a `Project`.\n",
                "operationId": "getAllProjectCreators",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `creators` associated with the `Project`",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Set creators of a `Project`.\n",
                "operationId": "setAllProjectCreators",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "creators",
                        "in": "formData",
                        "description": "The `ids` of the creators",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Add to creators of a `Project`.\n",
                "operationId": "addProjectCreators",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "creators",
                        "in": "formData",
                        "description": "The `ids` of the creators",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Remove all 'project_creators' from a `Project`.\n",
                "operationId": "deleteProjectCreators",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/creators/{user_id}": {
            "get": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Check if `User` is creator on `Project', return user if true.\n",
                "operationId": "isUserCreatorOnProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Set creator of a `Project`.\n",
                "operationId": "setProjectCreator",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The `id` of the creator",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Add to creators of a `Project`.\n",
                "operationId": "addProjectCreator",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The `ids` of the creators",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Remove a 'project_creator' from a `Project`.\n",
                "operationId": "deleteProjectCreator",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The `ids` of the creators",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/collaborators": {
            "get": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Get collaborators of a `Project`.\n",
                "operationId": "getAllProjectCollaborators",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `collaborators` associated with the `Project`",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Set creators of a `Project`.\n",
                "operationId": "setAllProjectCollaborators",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "collaborators",
                        "in": "formData",
                        "description": "The `ids` of the ollaborators",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Add to collaborators of a `Project`.\n",
                "operationId": "addProjectCollaborators",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "collaborators",
                        "in": "formData",
                        "description": "The `ids` of the collaborators",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Remove all 'project_collaborators' from a `Project`.\n",
                "operationId": "deleteProjectCollaborators",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/collaborators/{user_id}": {
            "get": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Check if `User` is collaborator on `Project', return if true\n",
                "operationId": "isUserCollaboratorOnProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Set collaborators of a `Project`.\n",
                "operationId": "setProjectCollaborators",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The `id` of the collaborator",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Add to collaborator of a `Project`.\n",
                "operationId": "addProjectCollaborator",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The `ids` of the collaborator",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "User"
                ],
                "description": "Remove a 'project_collaborator' from a `Project`.\n",
                "operationId": "deleteProjectCollaborator",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The `ids` of the collaborator",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/urls": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Get urls of a `Project`.\n",
                "operationId": "getAllProjectUrls",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `urls` associated with the `Project`",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "description": "Set urls of a `Project`.\n",
                "operationId": "setAllProjectUrls",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "urls",
                        "in": "formData",
                        "description": "The `urls` of the project",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "description": "Add to urls of a `Project`.\n",
                "operationId": "addProjectUrls",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "urls",
                        "in": "formData",
                        "description": "The `urls` of the `Project``",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "description": "Remove all 'urls' from a `Project`.\n",
                "operationId": "deleteProjectUrls",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/keys": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Get keywords of a `Project`.\n",
                "operationId": "getAllProjectKeywords",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `keywords` associated with the `Project`",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "description": "Set keywords of a `Project`.\n",
                "operationId": "setAllProjectKeywords",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keywords",
                        "in": "formData",
                        "description": "The `keywords` of the `Project``",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "description": "Add to keywords of a `Project`.\n",
                "operationId": "addProjectKeywords",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keywords",
                        "in": "formData",
                        "description": "The `ids` of the collaborators",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "description": "Remove all 'keywords' from a `Project`.\n",
                "operationId": "deleteProjectKeywords",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/keys/{keyword}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Check if keyword is on `Project'.\n",
                "operationId": "isKeywordOnProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `User` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "The keyword",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "description": "Set keyword of a `Project`.\n",
                "operationId": "setProjectKeyword",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "The `keyword`",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "description": "Add to keyword of a `Project`.\n",
                "operationId": "addProjectKeyword",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "The keyword",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "description": "Remove a 'keyword' from a `Project`.\n",
                "operationId": "deleteProjectKeyword",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "The keyword",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/files": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Get files of a `Project`.\n",
                "operationId": "getAllProjectFiles",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `files` associated with the `Project`",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "description": "Set files of a `Project`.\n",
                "operationId": "setAllProjectFiles",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "files",
                        "in": "formData",
                        "description": "The `files` of the project",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "description": "Add to files of a `Project`.\n",
                "operationId": "addProjectFiles",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "urls",
                        "in": "formData",
                        "description": "The `files` of the `Project``",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "description": "Remove all 'files' from a `Project`.\n",
                "operationId": "deleteProjectFiles",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/reviews": {
            "get": {
                "tags": [
                    "Project",
                    "Review"
                ],
                "description": "Get reviews of a `Project`.\n",
                "operationId": "getAllProjectReviews",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `reviews` associated with the `Project`",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project",
                    "Review"
                ],
                "description": "Set reviews of a `Project`.\n",
                "operationId": "setAllProjectReviews",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reviews",
                        "in": "formData",
                        "description": "The `ids` of the reviews",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "Review"
                ],
                "description": "Add to reviews of a `Project`.\n",
                "operationId": "addProjectReviews",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reviews",
                        "in": "formData",
                        "description": "The `ids` of the reviews",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "Review"
                ],
                "description": "Remove all 'reviews' from a `Project`.\n",
                "operationId": "deleteProjectReviews",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/reviews/{review_id}": {
            "get": {
                "tags": [
                    "Project",
                    "Review"
                ],
                "description": "Check if `Review` of a `Project` if it is on project\n",
                "operationId": "isReviewOnOProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "review_id",
                        "in": "path",
                        "description": "The `id` of the review",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "Review"
                ],
                "description": "Add review to a `Project`.\n",
                "operationId": "addProjectReview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "review_id",
                        "in": "path",
                        "description": "The `id` of the review",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "Review"
                ],
                "description": "Remove a 'review' from a `Project`.\n",
                "operationId": "deleteProjectReview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "review_id",
                        "in": "path",
                        "description": "The `ids` of the review",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/posts": {
            "get": {
                "tags": [
                    "Project",
                    "Post"
                ],
                "description": "Get posts of a `Project`.\n",
                "operationId": "getAllProjectPosts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `reviews` associated with the `Project`",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project",
                    "Post"
                ],
                "description": "Set posts of a `Project`.\n",
                "operationId": "setAllProjectPosts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "posts",
                        "in": "formData",
                        "description": "The `ids` of the posts",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "Post"
                ],
                "description": "Add to posts of a `Project`.\n",
                "operationId": "addProjectPosts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reviews",
                        "in": "formData",
                        "description": "The `ids` of the posts",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "Post"
                ],
                "description": "Remove all 'posts' from a `Project`.\n",
                "operationId": "deleteProjectPosts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/posts/{post_id}": {
            "get": {
                "tags": [
                    "Project",
                    "Post"
                ],
                "description": "Check if `Post` is on a `Project`\n",
                "operationId": "isPostOnProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "post_id",
                        "in": "path",
                        "description": "The `id` of the post",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The post",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "Post"
                ],
                "description": "Add post to a `Project`.\n",
                "operationId": "addProjectPost",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "post_id",
                        "in": "path",
                        "description": "The `id` of the post",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "Post"
                ],
                "description": "Remove a 'post' from a `Project`.\n",
                "operationId": "deleteProjectPost",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "post_id",
                        "in": "path",
                        "description": "The `ids` of the post",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/project_name": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Retrieve project_name associated with a `Project`.\n",
                "operationId": "getProjectNameById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The project_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "description": "Delete project_name from a project\n",
                "operationId": "deleteUserProjectName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_name` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/name/{project_name}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Check if project name of `Project` is some value\n",
                "operationId": "isNameOnProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "The `project_name` of the `Project`",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The post",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "description": "Add project_name to a `Project`.\n",
                "operationId": "addProjectName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "The project_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The id associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "description": "Modify project_name of a `Project`.\n",
                "operationId": "modifyProjectName",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_name",
                        "in": "path",
                        "description": "The project_name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The id associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/grant_type": {
            "get": {
                "tags": [
                    "Project",
                    "Grant",
                    "REFACTOR-TODO-move-grant-stuff-to-grant-object"
                ],
                "description": "Retrieve project_main_grant_type associated with a `Project`.\n",
                "operationId": "getProjectGrantTypeById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The project_main_grant_type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "Grant",
                    "REFACTOR-TODO-move-grant-stuff-to-grant-object"
                ],
                "description": "Delete project_main_grant_type from a project\n",
                "operationId": "deleteProjectGrantType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_main_grant_type` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/grant_type/{project_main_grant_type}": {
            "get": {
                "tags": [
                    "Project",
                    "Grant",
                    "REFACTOR-TODO-move-grant-stuff-to-grant-object"
                ],
                "description": "Check if grant tyoe  of `Project` is some value\n",
                "operationId": "isGrantTypeOnProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_main_grant_type",
                        "in": "path",
                        "description": "The `project_main_grant_type` of the `Project`",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The post",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project",
                    "Grant",
                    "REFACTOR-TODO-move-grant-stuff-to-grant-object"
                ],
                "description": "Add project_name to a `Project`.\n",
                "operationId": "setProjectGrantType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_main_grant_type",
                        "in": "path",
                        "description": "The project_main_grant_type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The id associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "Grant",
                    "REFACTOR-TODO-move-grant-stuff-to-grant-object"
                ],
                "description": "Modify project_name of a `Project`.\n",
                "operationId": "modifyProjectGrantType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_main_grant_type",
                        "in": "path",
                        "description": "The project_main_grant_type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The id associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/description": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Retrieve project_description associated with a `Project`.\n",
                "operationId": "getProjectDescriptionById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The project_description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "description": "Delete project_description from a project\n",
                "operationId": "deleteProjectDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `project_description` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/description/{project_description}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Check if project descript of `Project` is some value\n",
                "operationId": "isProjectDescriptionOnProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_description",
                        "in": "path",
                        "description": "The `project_description` of the `Project`",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The post",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "description": "Add project_description to a `Project`.\n",
                "operationId": "setProjectDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_description",
                        "in": "path",
                        "description": "The project_description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The id associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "description": "Modify project_description of a `Project`.\n",
                "operationId": "modifyProjectDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_description",
                        "in": "path",
                        "description": "The project_description",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The id associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/grant": {
            "get": {
                "tags": [
                    "Project",
                    "Grant"
                ],
                "description": "Retrieve grant associated with a `Project`.\n",
                "operationId": "getProjectGrantById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The grant",
                        "schema": {
                            "$ref": "#/definitions/Grant"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "Grant"
                ],
                "description": "Delete grant from a project\n",
                "operationId": "deleteProjectGrant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `grant` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/grant/{grant_id}": {
            "get": {
                "tags": [
                    "Project",
                    "Grant"
                ],
                "description": "Check if `Grant` is on `Project`\n",
                "operationId": "isGrantOnProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "grant_id",
                        "in": "path",
                        "description": "The `grant_id` of the `Project`",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The post",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project",
                    "Grant"
                ],
                "description": "Add grant to a `Project`.\n",
                "operationId": "setProjectGrant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "grant_id",
                        "in": "path",
                        "description": "The grant_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The id associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "Grant"
                ],
                "description": "Modify grant of a `Project`.\n",
                "operationId": "modifyProjectGrant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "grant_id",
                        "in": "path",
                        "description": "The grant_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The id associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/uni": {
            "get": {
                "tags": [
                    "Project",
                    "University"
                ],
                "description": "Retrieve universities associated with a `Project`.\n",
                "operationId": "getUniversitiesById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The grant",
                        "schema": {
                            "$ref": "#/definitions/University"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project",
                    "University"
                ],
                "description": "Delete all universities from a project\n",
                "operationId": "deleteProjecUniversities",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/uni/{university_id}": {
            "get": {
                "tags": [
                    "Project",
                    "University"
                ],
                "description": "Check if project descript of `Project` is some value\n",
                "operationId": "isUniversityOnProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "university_id",
                        "in": "path",
                        "description": "The id of the `University`",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The post",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project",
                    "University"
                ],
                "description": "Set university_id to a `Project`.\n",
                "operationId": "setProjectUniversity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "university_id",
                        "in": "path",
                        "description": "The university_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The id associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project",
                    "University"
                ],
                "description": "Modify university_id of a `Project`.\n",
                "operationId": "modifyProjectUniversity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "university_id",
                        "in": "path",
                        "description": "The university_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The id associated with the `Project`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Project/{id}/private": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Retrieve is_private from a  `Project`.\n",
                "operationId": "isProjectPrivate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "description": "Set is_private from a  `Project`.\n",
                "operationId": "setIsProjectPrivate",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The `id` of the `Project` to retrieve",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "is_private",
                        "in": "formData",
                        "description": "is project private?",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Posts": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Gets `Post` objects.\nRequired query param of **size** determines\nmax number of results per page, and **page** determines\nwhich page in the pagination we are. Remaining params optional.\n",
                "operationId": "getPosts",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "size",
                        "in": "formData",
                        "description": "Max size of array to return",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "formData",
                        "description": "Location in pagination",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "post_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Unique identifier representing a specific `Post`"
                    },
                    {
                        "name": "created_date",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "description": "datetime stamp of `Post` creation"
                    },
                    {
                        "name": "updated_date",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "description": "datetime stamp of `Post` update"
                    },
                    {
                        "name": "post_tags_id",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of `User`s tagged in `Post`"
                    },
                    {
                        "name": "post_keywords",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of keywords for `Post`"
                    },
                    {
                        "name": "post_title",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "ID of `User` author of post"
                    },
                    {
                        "name": "post_text",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "ID of `User` author of post"
                    },
                    {
                        "name": "post_creator_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "ID of `User` author of post"
                    },
                    {
                        "name": "is_post_private",
                        "in": "formData",
                        "required": false,
                        "type": "boolean",
                        "description": "is `Post` private?"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of posts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Posts/author/{user_id}": {
            "get": {
                "tags": [
                    "Post",
                    "User"
                ],
                "description": "Retrieve `Post` objects with a particular `User` as author\n",
                "operationId": "getPostsByAuthorId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of 'User' to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of posts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Posts/keys": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieve `Project` objects by a set of keywords\n",
                "operationId": "getPostsByKeywords",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "keywords",
                        "in": "formData",
                        "description": "Keywords when searching for user",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of posts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Posts/keys/{keyword}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieve `Project` objects by a particular keyword\n",
                "operationId": "getPostsByKeyword",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "keyword to search for",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "posts response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Posts/created_date": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieve `Post` objects created on or later than given date\n",
                "operationId": "getPostsByCreatedDateForm",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "created_date",
                        "in": "formData",
                        "description": "date of creation",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "posts response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Posts/created_date/{created_date}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieve `Post` objects created on or later than given date\n",
                "operationId": "getPostsByCreatedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "created_date",
                        "in": "path",
                        "description": "date of creation",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "posts response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Posts/modified_date": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieve `Post` objects modified on or later than given date\n",
                "operationId": "getPostsByModifiedDateForm",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modified_date",
                        "in": "formData",
                        "description": "date of modification",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "posts response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Posts/modified_date/{modified_date}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieve `Post` objects created on or later than given date\n",
                "operationId": "getPostsByModifiedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modified_date",
                        "in": "path",
                        "description": "date of creation",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "posts response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Post": {
            "post": {
                "tags": [
                    "Post"
                ],
                "description": "Creates `Post` objects. **post_title**, **project_descpost_textription**,\n**post_creator_id**, and **is_post_private** are required,\nall others optional.\n",
                "operationId": "createPost",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "post_title",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "ID of `User` author of post"
                    },
                    {
                        "name": "post_text",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "ID of `User` author of post"
                    },
                    {
                        "name": "post_creator_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "ID of `User` author of post"
                    },
                    {
                        "name": "post_tags_id",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of `User`s tagged in `Post`"
                    },
                    {
                        "name": "post_keywords",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of keywords for `Post`"
                    },
                    {
                        "name": "is_post_private",
                        "in": "formData",
                        "required": false,
                        "type": "boolean",
                        "description": "is `Post` private?"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the id of the created `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Post/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieves `Post` objects by **id**.\n",
                "operationId": "getPostById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Post`",
                        "schema": {
                            "$ref": "#/definitions/Post"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Post"
                ],
                "description": "Updates `Post` objects. **id** is required,\nall others optional.\n",
                "operationId": "updatePosttById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "post_title",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "post_text",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "The `Post` body"
                    },
                    {
                        "name": "post_creator_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "ID of `User` author of post"
                    },
                    {
                        "name": "post_tags_id",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of `User`s tagged in `Post`"
                    },
                    {
                        "name": "post_keywords",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of keywords for `Post`"
                    },
                    {
                        "name": "is_post_private",
                        "in": "formData",
                        "required": false,
                        "type": "boolean",
                        "description": "Is post private?"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A `Post` object",
                        "schema": {
                            "$ref": "#/definitions/Post"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "description": "Deletes `Post` objects by **id**.\n",
                "operationId": "deletePostById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Post` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Post/{id}/tags": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieves `Post` tags\n",
                "operationId": "getPostTagsById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The ids of the tagged `User` ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Replaces tags on `Post` objects. **id** and **tagged_users* both required.\n",
                "operationId": "replacePostTagsById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "tagged_users",
                        "in": "formData",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "new tags"
                    }
                ],
                "tags": [
                    "Post"
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "description": "Deletes all tags on a `Post` objects by **id**.\n",
                "operationId": "deleteProjectTagsById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Post` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Post/{id}/tags/{user_id}": {
            "get": {
                "tags": [
                    "Post",
                    "User"
                ],
                "description": "Retrieves whether user is tagged on past\n",
                "operationId": "getIsUserTagOnProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "user_id to check for"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean of whether the user is taged",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Post",
                    "User"
                ],
                "description": "Adds tags to `Post` objects. **id** and **user_id** both required.\n",
                "operationId": "updatePostTagsById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "new tags"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Post",
                    "User"
                ],
                "description": "Adds tag to `Post` objects. **id** and **user_id** both required.\n",
                "operationId": "addPostTagsByIdPost",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `User` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post",
                    "User"
                ],
                "description": "Deletes the tags on a `Post` objects by **id** and **user_id**\n",
                "operationId": "deletePostTagsById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `User` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Post` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Post/{id}/keys": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieves `Post` keywords\n",
                "operationId": "getPostKeywordsById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The keywords",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Post"
                ],
                "description": "Adds keywords to `Post` objects. **id** and **keywords** both required.\n",
                "operationId": "updateProjectKeywordsById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "keywords",
                        "in": "formData",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "new keywords"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "description": "Replaces keywords on `Post` objects. **id** and **keywords* both required.\n",
                "operationId": "replacePostKeywordsById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "keywords",
                        "in": "formData",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "new tags"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "description": "Deletes all tags on a `Post` objects by **id**.\n",
                "operationId": "deletePostKeywordsById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Post` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Post/{id}/keys/{keyword}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieves whether keyword is on past\n",
                "operationId": "isKeywordOnPost",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "the keyword"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean of whether the user is taged",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Post"
                ],
                "description": "Adds tags to `Post` objects. **id** and **keyword** both required.\n",
                "operationId": "addPostKeywordById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post's name"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "the keyword"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "description": "Adds keyword to `Post` objects. **id** and **user_id* both required.\n",
                "operationId": "addPostKeywordByIdPost",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `User` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "description": "Deletes a keyword on a `Post` objects by **id** and **keyword**\n",
                "operationId": "deletePostKeywordById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The keyword"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Post` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Post/{id}/title": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieves `Post` title\n",
                "operationId": "getPostTitleById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Post"
                ],
                "description": "Sets the post title.  **id** and **title** both required.\n",
                "operationId": "updatePostTitleById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "new title"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "description": "Sets the post title.  **id** and **title** both required.\n",
                "operationId": "updatePostTitleByIdPost",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "new title"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "description": "Deletes title of a `Post` objects by **id**.\n",
                "operationId": "deletePosTitleById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Post` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Post/{id}/text": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieves `Post` text\n",
                "operationId": "getPostTextById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The text",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Post"
                ],
                "description": "Sets the post title.  **id** and **text** both required.\n",
                "operationId": "updatePostTextById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "text",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "new text"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "description": "Sets the post text.  **id** and **text** both required.\n",
                "operationId": "updatePostTextByIdPost",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    },
                    {
                        "name": "text",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "new title"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "description": "Deletes text of a `Post` objects by **id**.\n",
                "operationId": "deletePostTextById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Post` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Post/{id}/author": {
            "get": {
                "tags": [
                    "Post",
                    "User"
                ],
                "description": "Retrieves `Post` author\n",
                "operationId": "getPostAuthorById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The author",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Sets the post author.  **id** and **author** both required.\n",
                "operationId": "updatePostAuthorById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    },
                    {
                        "name": "author",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "new author"
                    }
                ],
                "tags": [
                    "Post"
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Sets the post author.  **id** and **author** both required.\n",
                "operationId": "updatePostAuthorByIdPost",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    },
                    {
                        "name": "text",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "new author"
                    }
                ],
                "tags": [
                    "Post"
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "description": "Deletes text of a `Post` author by **id**.\n",
                "operationId": "deletePostAuthorById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Post` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Post/{id}/private": {
            "get": {
                "tags": [
                    "Post"
                ],
                "description": "Retrieves whether `Post` is private\n",
                "operationId": "isPostPrivateById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Sets the post privacy.  **id** and **is_private** both required.\n",
                "operationId": "updatePostPrivacyById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    },
                    {
                        "name": "is_private",
                        "in": "formData",
                        "required": true,
                        "type": "boolean",
                        "description": "is post private?"
                    }
                ],
                "tags": [
                    "Post"
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Sets the post privacy.  **id** and **is_private** both required.\n",
                "operationId": "updatePostPrivacyByIdPost",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` id"
                    },
                    {
                        "name": "is_private",
                        "in": "formData",
                        "required": true,
                        "type": "boolean",
                        "description": "is post private?"
                    }
                ],
                "tags": [
                    "Post"
                ],
                "responses": {
                    "200": {
                        "description": "The `id` of the `Post`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grants": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Gets `Grant` objects.\nRequired query param of **size** determines\nmax number of results per page, and **page** determines\nwhich page in the pagination we are. Remaining params optional.\n",
                "operationId": "getGrants",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "size",
                        "in": "formData",
                        "description": "Max size of array to return",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "formData",
                        "description": "Location in pagination",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "grant_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Unique identifier representing a specific `Grant`"
                    },
                    {
                        "name": "created_date",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "description": "datetime stamp of `Grant` creation"
                    },
                    {
                        "name": "updated_date",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "description": "datetime stamp of `Grant` update"
                    },
                    {
                        "name": "grant_url",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of URLs in `Grant`"
                    },
                    {
                        "name": "grant_description",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "array of keywords for `Grant`"
                    },
                    {
                        "name": "grant_amount",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Amount of `Grant`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grants/keys": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieve `Grant` objects by a set of keywords\n",
                "operationId": "getGrantsByKeywords",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "keywords",
                        "in": "formData",
                        "description": "Keywords when searching for user",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grants/keys/{keyword}": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieve `Project` objects by a particular keyword\n",
                "operationId": "getGrantsByKeyword",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "keyword to search for",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grants/created_date": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieve `Grant` objects created on or later than given date\n",
                "operationId": "getGrantsByCreatedDateForm",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "created_date",
                        "in": "formData",
                        "description": "date of creation",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grants/created_date/{created_date}": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieve `Grant` objects created on or later than given date\n",
                "operationId": "getGrantsByCreatedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "created_date",
                        "in": "path",
                        "description": "date of creation",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grants/modified_date": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieve `Grant` objects modified on or later than given date\n",
                "operationId": "getGrantsByModifiedDateForm",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modified_date",
                        "in": "formData",
                        "description": "date of modification",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grants/modified_date/{modified_date}": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieve `Grant` objects created on or later than given date\n",
                "operationId": "getGrantsByModifiedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modified_date",
                        "in": "path",
                        "description": "date of creation",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grants/amount": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieve `Grant` objects based on amount\n",
                "operationId": "getGrantsByAmount",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "minimum",
                        "in": "formData",
                        "description": "minimum grant amount",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "maximum",
                        "in": "formData",
                        "description": "maximum grant amount",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grants/amount/min/{amount}": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieve `Grant` objects based on amount\n",
                "operationId": "getGrantsByMinAmount",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "amount",
                        "in": "path",
                        "description": "minimum grant amount",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grants/amount/max/{amount}": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieve `Grant` objects based on amount\n",
                "operationId": "getGrantsByMaxAmount",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "amount",
                        "in": "path",
                        "description": "maxiumum grant amount",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grant": {
            "post": {
                "tags": [
                    "Grant"
                ],
                "description": "Creates `Grant` objects. **post_title**, **project_descpost_textription**,\n**post_creator_id**, and **is_post_private** are required,\nall others optional.\n",
                "operationId": "createGrant",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "grant_url",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "array of URLs for `Grant`"
                    },
                    {
                        "name": "grant_description",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Description of grant"
                    },
                    {
                        "name": "amount",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "description": "Amount of grant"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the id of the created `Grant`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grant/{id}": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieves `Grant` objects by **id**.\n",
                "operationId": "getGrantById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant`",
                        "schema": {
                            "$ref": "#/definitions/Grant"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Grant"
                ],
                "description": "Updates `Grant` objects. **id** is required,\nall others optional.\n",
                "operationId": "updateGrantById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "grant_url",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "array of URLs for `Grant`"
                    },
                    {
                        "name": "grant_description",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Description of `Grant`"
                    },
                    {
                        "name": "amount",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "format": "float",
                        "description": "Amount of `Grant`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A `Grant` object",
                        "schema": {
                            "$ref": "#/definitions/Grant"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Grant"
                ],
                "description": "Deletes `Grant` objects by **id**.\n",
                "operationId": "deleteGrantById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grant/{id}/created": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieves `Grant` object created date\n",
                "operationId": "getGrantCreatedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` creation date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grant/{id}/modified": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieves `Grant` objects modified date\n",
                "operationId": "getGrantModifiedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` modified date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grant/{id}/url": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieves `Grant` url\n",
                "operationId": "getGrantUrl",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` url array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Grant"
                ],
                "description": "Add `Grant` url\n",
                "operationId": "addGrantUrl",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "url",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` url"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Grant"
                ],
                "description": "Replace `Grant` url array\n",
                "operationId": "setGrantUrls",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "urls",
                        "in": "formData",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The `Grant` urls"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Grant"
                ],
                "description": "Clear `Grant` url array\n",
                "operationId": "clearGrantUrls",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grant/{id}/description": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieves `Grant` description\n",
                "operationId": "getGrantDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Grant"
                ],
                "description": "Modify `Grant` description\n",
                "operationId": "modifyGrantDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "the `Grant` description"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` url array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Grant"
                ],
                "description": "Set `Grant` description\n",
                "operationId": "setGrantDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "the `Grant` description"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` url array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Grant"
                ],
                "description": "Clear `Grant` description\n",
                "operationId": "clearGrantDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grant/{id}/amount": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieves `Grant` amount\n",
                "operationId": "getGrantAmount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` amount",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Grant"
                ],
                "description": "Modify `Grant` amount\n",
                "operationId": "modifyGrantAmount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "amount",
                        "in": "formData",
                        "required": true,
                        "type": "number",
                        "format": "float",
                        "description": "the `Grant` amount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Grant"
                ],
                "description": "Set `Grant` amount\n",
                "operationId": "setGrantAmount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "amount",
                        "in": "formData",
                        "required": true,
                        "type": "number",
                        "format": "float",
                        "description": "the `Grant` amount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Grant"
                ],
                "description": "Clear `Grant` amount\n",
                "operationId": "clearGrantAmount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grant/{id}/amount/{amount}": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieves if `Grant` amount is equal to param\n",
                "operationId": "isGrantAmount",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "amount",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` amount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` amount",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Grant"
                ],
                "description": "Modify `Grant` amount\n",
                "operationId": "modifyGrantAmountPath",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "amount",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "the `Grant` amount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Grant"
                ],
                "description": "Set `Grant` amount\n",
                "operationId": "setGrantAmountPath",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "amount",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "the `Grant` amount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grant/{id}/keys": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieves `Grant` keywords\n",
                "operationId": "getGrantKeywords",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` keywords"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Grant"
                ],
                "description": "Modify `Grant` keywords\n",
                "operationId": "addGrantKeywords",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "keywords",
                        "in": "formData",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "the `Grant` keywords"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Grant"
                ],
                "description": "Set `Grant` keywords\n",
                "operationId": "setGrantKeywords",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "keywords",
                        "in": "formData",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "the `Grant` keywords"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Grant"
                ],
                "description": "Clear `Grant` keywords\n",
                "operationId": "clearGrantKeywords",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Grant/{id}/keys/{keyword}": {
            "get": {
                "tags": [
                    "Grant"
                ],
                "description": "Retrieves if `Grant` amount is equal to param\n",
                "operationId": "isGrantHaveKeyword",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` keyword"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Grant"
                ],
                "description": "Add `Grant` keyword\n",
                "operationId": "addGrantKeyword",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "the `Grant` keyword"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Grant"
                ],
                "description": "Set `Grant` keyword\n",
                "operationId": "setGrantKeywordPath",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "the `Grant` keyword"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Grant"
                ],
                "description": "Set `Grant` keyword\n",
                "operationId": "deleteGrantKeyword",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Grant` name"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "the `Grant` keyword"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Grant` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Reviews": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Gets `Review` objects.\nRequired query param of **size** determines\nmax number of results per page, and **page** determines\nwhich page in the pagination we are. Remaining params optional.\n",
                "operationId": "getReviewss",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "size",
                        "in": "formData",
                        "description": "Max size of array to return",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "formData",
                        "description": "Location in pagination",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "review_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Unique identifier representing a specific `Review`"
                    },
                    {
                        "name": "created_date",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "description": "datetime stamp of `Review` creation"
                    },
                    {
                        "name": "updated_date",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "date-time",
                        "description": "datetime stamp of `Review` update"
                    },
                    {
                        "name": "reviewer_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "id of `User` reviewer"
                    },
                    {
                        "name": "review_body",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "body of `Review`"
                    },
                    {
                        "name": "rating",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "format": "int32",
                        "description": "Integer rating of review (1-5)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of `Review` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Reviews/created_date": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Retrieve `Grant` objects created on or later than given date\n",
                "operationId": "getReviewsByCreatedDateForm",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "created_date",
                        "in": "formData",
                        "description": "date of creation",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Reviews` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Reviews/created_date/{created_date}": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Retrieve `Reviews` objects created on or later than given date\n",
                "operationId": "getReviewsByCreatedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "created_date",
                        "in": "path",
                        "description": "date of creation",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Grant` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grant"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Reviews/modified_date": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Retrieve `Review` objects modified on or later than given date\n",
                "operationId": "getReviewssByModifiedDateForm",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modified_date",
                        "in": "formData",
                        "description": "date of modification",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Review` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Reviews/modified_date/{modified_date}": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Retrieve `Review` objects created on or later than given date\n",
                "operationId": "getReviewsByModifiedDate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modified_date",
                        "in": "path",
                        "description": "date of creation",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Reviews` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Reviews/reviewer/{user_id}": {
            "get": {
                "tags": [
                    "Review",
                    "User"
                ],
                "description": "Retrieve `Review` objects with specified reviewer\n",
                "operationId": "getReviewsByReviewer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "id of `User` reviewer",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Reviews` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Reviews/rating": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Retrieve `Review` objects with a rating in the given range\n",
                "operationId": "getReviewsByRating",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "min",
                        "in": "formData",
                        "description": "Minimum rating (>= 1)",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "max",
                        "in": "formData",
                        "description": "Maximum rating (<= 5)",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Reviews` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Reviews/rating/min/{rating}": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Retrieve `Review` objects with a rating greater than or equal to **rating**\n",
                "operationId": "getReviewsByMinRating",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rating",
                        "in": "path",
                        "description": "Minimum rating (1 <= rating <= 5)",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Reviews` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Review/{id}": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Retrieves `Review` objects by **id**.\n",
                "operationId": "getReviewById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review`",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Review"
                ],
                "description": "Updates `Review` objects. **id** is required,\nall others optional.\n",
                "operationId": "updateReviewById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Post` name"
                    },
                    {
                        "name": "review_body",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "body of `Review`"
                    },
                    {
                        "name": "reviewer_id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "User who wrote `Review`"
                    },
                    {
                        "name": "rating",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "format": "int32",
                        "description": "Rating (1 <= rating <= 5)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A `Review` object",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Review"
                ],
                "description": "Deletes `Review` objects by **id**.\n",
                "operationId": "deleteReviewById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Review/{id}/body": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Sets body of review\n",
                "operationId": "getReviewBodyById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Review"
                ],
                "description": "Updates `Review` body. \n",
                "operationId": "updateReviewBodyById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` name"
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Review"
                ],
                "description": "Set `Review` body. \n",
                "operationId": "setReviewBodyById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` name"
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Review"
                ],
                "description": "Deletes `Review` body\n",
                "operationId": "deleteReviewBodyById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Review/{id}/reviewer": {
            "get": {
                "tags": [
                    "Review",
                    "User"
                ],
                "description": "Gets reviewer of review\n",
                "operationId": "getReviewReviewerById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` reviewer user id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Review",
                    "User"
                ],
                "description": "Deletes `Review` reviewer\n",
                "operationId": "deleteReviewReviewer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Review/{id}/reviewer/{user_id}": {
            "get": {
                "tags": [
                    "Review",
                    "User"
                ],
                "description": "Is user the reviewer?\n",
                "operationId": "isUserReviewReviewer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Review",
                    "User"
                ],
                "description": "Updates `Review` reviewer. \n",
                "operationId": "updateReviewReviewerById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` name"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Review",
                    "User"
                ],
                "description": "Set `Review` reviewer. \n",
                "operationId": "setReviewReviewerById",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` name"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Review",
                    "User"
                ],
                "description": "Deletes `Review` reviewer\n",
                "operationId": "deleteReviewReviewerById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` reviewer id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Review/{id}/rating": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Gets rating of review\n",
                "operationId": "getReviewRatingById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` rating",
                        "schema": {
                            "type": "number",
                            "format": "int32"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Review"
                ],
                "description": "Deletes `Review` rating\n",
                "operationId": "deleteReviewRating",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Review/{id}/rating/{rating}": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Is rating equal to what we pass in\n",
                "operationId": "isReviewRating",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    },
                    {
                        "name": "rating",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` rating"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The boolean",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Review"
                ],
                "description": "Updates `Review` rating\n",
                "operationId": "updateReviewRating",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    },
                    {
                        "name": "rating",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` rating"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Review"
                ],
                "description": "Sets `Review` rating\n",
                "operationId": "setReviewRating",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    },
                    {
                        "name": "rating",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` rating"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Review/{id}/url": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Gets url of review\n",
                "operationId": "getReviewUrlById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` url",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Review"
                ],
                "description": "Deletes `Review` url\n",
                "operationId": "deleteReviewUrl",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Review"
                ],
                "description": "Updates `Review` url\n",
                "operationId": "updateReviewUrl",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    },
                    {
                        "name": "url",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` url"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Review"
                ],
                "description": "Sets `Review` url\n",
                "operationId": "setReviewUrl",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    },
                    {
                        "name": "url",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` url"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Review/{id}/created": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Gets review created date\n",
                "operationId": "getReviewCreatedDateById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` create date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Review/{id}/updated": {
            "get": {
                "tags": [
                    "Review"
                ],
                "description": "Gets review updated date\n",
                "operationId": "getReviewUpdatedDateById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The `Review` id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The `Review` update date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific user"
                },
                "first_name": {
                    "type": "string",
                    "description": "User's first name."
                },
                "last_name": {
                    "type": "string",
                    "description": "User's last name"
                },
                "is_creator": {
                    "type": "boolean",
                    "description": "Is user a project creator?"
                },
                "is_collaborator": {
                    "type": "boolean",
                    "description": "Is user a project collaborator?"
                },
                "profile_images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of file system paths to profile images"
                },
                "created_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of user creation"
                },
                "updated_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of user update"
                },
                "geolocation": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    },
                    "description": "Tuple representing latitude/longitude of user"
                },
                "city": {
                    "type": "string",
                    "description": "City of user location"
                },
                "state": {
                    "type": "string",
                    "description": "State of user location"
                },
                "recent_collaborators_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "array of user_ids of recent collaborators"
                },
                "university_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "array of universities the user is associated with"
                },
                "project_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "array of user projects"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "array of keywords associated with the user"
                },
                "review_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "array of review ids"
                },
                "is_user_private": {
                    "type": "boolean",
                    "description": "is user profile public or private?"
                }
            }
        },
        "Users": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                }
            }
        },
        "Project": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific project"
                },
                "created_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of project creation"
                },
                "updated_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of project update"
                },
                "project_name": {
                    "type": "string",
                    "description": "Project's name"
                },
                "project_main_grant_type": {
                    "type": "string",
                    "description": "Project's grant type"
                },
                "project_description": {
                    "type": "string",
                    "description": "Description of project"
                },
                "project_creator_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "array of project creator ids"
                },
                "project_collaborators_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "array of project collaborator ids"
                },
                "project_keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "array of project keywords"
                },
                "project_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "array of project URLs"
                },
                "grant_id": {
                    "type": "string",
                    "description": "Grant ID"
                },
                "university_id": {
                    "type": "string",
                    "description": "ID of university hosting research"
                },
                "grant_facilitator": {
                    "type": "string",
                    "description": "Name of individual fascilitating grant funding"
                },
                "project_file": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "files for grant"
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "reviews"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "posts related to project"
                },
                "is_project_private": {
                    "type": "boolean",
                    "description": "is project private?"
                }
            }
        },
        "Projects": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Project"
                    }
                }
            }
        },
        "Post": {
            "type": "object",
            "properties": {
                "post_id": {
                    "type": "string",
                    "description": "id of post"
                },
                "created_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of post creation"
                },
                "updated_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of post update"
                },
                "post_title": {
                    "type": "string",
                    "description": "title of post"
                },
                "post_text": {
                    "type": "string",
                    "description": "text of post"
                },
                "post_keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "keywords for post"
                },
                "post_author": {
                    "$ref": "#/definitions/User",
                    "description": "author of post"
                },
                "post_author_id": {
                    "type": "string",
                    "description": "id of author of post"
                },
                "post_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "description": "tagged users"
                },
                "post_tags_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "tagged user ids"
                },
                "is_post_private": {
                    "type": "boolean",
                    "description": "is post private?"
                }
            }
        },
        "Posts": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Post"
                    }
                }
            }
        },
        "Grant": {
            "type": "object",
            "properties": {
                "grant_id": {
                    "type": "string",
                    "description": "id of grant"
                },
                "created_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of grant creation"
                },
                "updated_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of grant update"
                },
                "grant_url": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URL of grants"
                },
                "grant_keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "grant keywords"
                },
                "grant_description": {
                    "type": "string",
                    "description": "Grant description"
                },
                "grant_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount of grant"
                }
            }
        },
        "Grants": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Grant"
                    }
                }
            }
        },
        "Review": {
            "type": "object",
            "properties": {
                "review_id": {
                    "type": "string",
                    "description": "id of review"
                },
                "created_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of review creation"
                },
                "updated_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of review update"
                },
                "review_body": {
                    "type": "string",
                    "description": "text body of review"
                },
                "reviewer": {
                    "$ref": "#/definitions/User",
                    "description": "reviewer user"
                },
                "reviewer_id": {
                    "type": "string",
                    "description": "reviewer user id"
                },
                "rating": {
                    "type": "integer",
                    "format": "int32",
                    "description": "rating, must be 1-5"
                }
            }
        },
        "Reviews": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Review"
                    }
                }
            }
        },
        "Skill": {
            "type": "object",
            "properties": {
                "review_id": {
                    "type": "string",
                    "description": "id of skill"
                },
                "created_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of skill creation"
                },
                "updated_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of skill update"
                },
                "description": {
                    "type": "string",
                    "description": "text body of skill"
                },
                "endorsements_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "ids of users who have endorsed the user for this skill"
                }
            }
        },
        "Skills": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Skill"
                    }
                }
            }
        },
        "University": {
            "type": "object",
            "properties": {
                "uni_id": {
                    "type": "string",
                    "description": "id of `University`"
                },
                "created_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of `University` creation"
                },
                "updated_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "datetime stamp of `University` update"
                },
                "university_name": {
                    "type": "string",
                    "description": "text body of `University`"
                },
                "profile_images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of file system paths to profile images"
                },
                "geolocation": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    },
                    "description": "Tuple representing latitude/longitude of user"
                },
                "city": {
                    "type": "string",
                    "description": "City of `University` location"
                },
                "state": {
                    "type": "string",
                    "description": "State of `University` location"
                },
                "project_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "ids of `Project`s based at this `University`"
                }
            }
        },
        "Universities": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/University"
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}