---
swagger: "2.0"
info:
  description: "Definition of ArmRay backend API"
  version: "0.0.1"
  title: "ArmRay API"
basePath: "/armray/api/0.1/rest"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /Project:
    post:
      tags:
      - "User"
      description: "Creates `Project` objects. **project_name**, **project_description**,\n\
        **project_creator_id**, and **is_project_private** are required,\nall others\
        \ optional.\n"
      operationId: "createProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "project_name"
        in: "formData"
        description: "Project's name"
        required: true
        type: "string"
      - name: "project_main_grant_type"
        in: "formData"
        description: "Project's grant type"
        required: false
        type: "string"
      - name: "project_description"
        in: "formData"
        description: "Description of project"
        required: true
        type: "string"
      - name: "project_creator_id"
        in: "formData"
        description: "array of project creator ids"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "project_collaborators_id"
        in: "formData"
        description: "array of project collaborator ids"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "project_keywords"
        in: "formData"
        description: "array of project keywords"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "project_urls"
        in: "formData"
        description: "array of project URLs"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "grant_id"
        in: "formData"
        description: "Grant ID"
        required: false
        type: "string"
      - name: "university_id"
        in: "formData"
        description: "ID of university hosting research"
        required: false
        type: "string"
      - name: "grant_facilitator"
        in: "formData"
        description: "Name of individual fascilitating grant funding"
        required: false
        type: "string"
      - name: "project_file"
        in: "formData"
        description: "files for grant"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "reviews"
        in: "formData"
        description: "reviews"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "posts"
        in: "formData"
        description: "posts related to project"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "is_project_private"
        in: "formData"
        description: "is project private?"
        required: true
        type: "boolean"
      responses:
        200:
          description: "The `id` of the created user"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
  /Project/{id}:
    get:
      description: "Retrieve a 'Project' by their id.\n"
      operationId: "getProjectById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "the `id` of the `Project` to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` of the deleted `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      tags:
      - "User"
      description: "Updates a `Project` object. All fields other than `id` optional.\n"
      operationId: "updateProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "project id"
        required: true
        type: "string"
      - name: "project_name"
        in: "formData"
        description: "Project's name"
        required: false
        type: "string"
      - name: "project_main_grant_type"
        in: "formData"
        description: "Project's grant type"
        required: false
        type: "string"
      - name: "project_description"
        in: "formData"
        description: "Description of project"
        required: false
        type: "string"
      - name: "project_creator_id"
        in: "formData"
        description: "array of project creator ids"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "project_collaborators_id"
        in: "formData"
        description: "array of project collaborator ids"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "project_keywords"
        in: "formData"
        description: "array of project keywords"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "project_urls"
        in: "formData"
        description: "array of project URLs"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "grant_id"
        in: "formData"
        description: "Grant ID"
        required: false
        type: "string"
      - name: "university_id"
        in: "formData"
        description: "ID of university hosting research"
        required: false
        type: "string"
      - name: "grant_facilitator"
        in: "formData"
        description: "Name of individual fascilitating grant funding"
        required: false
        type: "string"
      - name: "project_file"
        in: "formData"
        description: "files for grant"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "reviews"
        in: "formData"
        description: "reviews"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "posts"
        in: "formData"
        description: "posts related to project"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "is_project_private"
        in: "formData"
        description: "is project private?"
        required: false
        type: "boolean"
      responses:
        200:
          description: "The `id` of the updatee `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
    delete:
      description: "Delete a 'Project' by their id.\n"
      operationId: "deleteProjectById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "the `id` of the `Project` to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` of the deleted `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/collaborators:
    get:
      description: "Get collaborators of a `Project`.\n"
      operationId: "getAllProjectCollaborators"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `collaborators` associated with the `Project`"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Set creators of a `Project`.\n"
      operationId: "setAllProjectCollaborators"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "collaborators"
        in: "formData"
        description: "The `ids` of the ollaborators"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add to collaborators of a `Project`.\n"
      operationId: "addProjectCollaborators"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "collaborators"
        in: "formData"
        description: "The `ids` of the collaborators"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove all 'project_collaborators' from a `Project`.\n"
      operationId: "deleteProjectCollaborators"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/collaborators/{user_id}:
    post:
      description: "Set collaborators of a `Project`.\n"
      operationId: "setProjectCollaborators"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "user_id"
        in: "path"
        description: "The `id` of the collaborator"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add to collaborator of a `Project`.\n"
      operationId: "addProjectCollaborator"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "user_id"
        in: "path"
        description: "The `ids` of the collaborator"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove a 'project_collaborator' from a `Project`.\n"
      operationId: "deleteProjectCollaborator"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "user_id"
        in: "path"
        description: "The `ids` of the collaborator"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/creators:
    get:
      description: "Get creators of a `Project`.\n"
      operationId: "getAllProjectCreators"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `creators` associated with the `Project`"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Set creators of a `Project`.\n"
      operationId: "setAllProjectCreators"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "creators"
        in: "formData"
        description: "The `ids` of the creators"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add to creators of a `Project`.\n"
      operationId: "addProjectCreators"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "creators"
        in: "formData"
        description: "The `ids` of the creators"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove all 'project_creators' from a `Project`.\n"
      operationId: "deleteProjectCreators"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/creators/{user_id}:
    post:
      description: "Set creator of a `Project`.\n"
      operationId: "setProjectCreator"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "user_id"
        in: "path"
        description: "The `id` of the creator"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add to creators of a `Project`.\n"
      operationId: "addProjectCreator"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "user_id"
        in: "path"
        description: "The `ids` of the creators"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove a 'project_creator' from a `Project`.\n"
      operationId: "deleteProjectCreator"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "user_id"
        in: "path"
        description: "The `ids` of the creators"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/description:
    get:
      description: "Retrieve project_description associated with a `Project`.\n"
      operationId: "getProjectDescriptionById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The project_description"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete project_description from a project\n"
      operationId: "deleteProjectDescription"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_description` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/description/{project_description}:
    post:
      description: "Add project_description to a `Project`.\n"
      operationId: "setProjectDescription"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "project_description"
        in: "path"
        description: "The project_description"
        required: true
        type: "string"
      responses:
        200:
          description: "The id associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Modify project_description of a `Project`.\n"
      operationId: "modifyProjectDescription"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "project_description"
        in: "path"
        description: "The project_description"
        required: true
        type: "string"
      responses:
        200:
          description: "The id associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/files:
    get:
      description: "Get files of a `Project`.\n"
      operationId: "getAllProjectFiles"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `files` associated with the `Project`"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Set files of a `Project`.\n"
      operationId: "setAllProjectFiles"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "files"
        in: "formData"
        description: "The `files` of the project"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add to files of a `Project`.\n"
      operationId: "addProjectFiles"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "urls"
        in: "formData"
        description: "The `files` of the `Project``"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove all 'files' from a `Project`.\n"
      operationId: "deleteProjectFiles"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/grant:
    get:
      description: "Retrieve grant associated with a `Project`.\n"
      operationId: "getProjectGrantById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The grant"
          schema:
            $ref: "#/definitions/Grant"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete grant from a project\n"
      operationId: "deleteProjectGrant"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `grant` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/grant/{grant_id}:
    post:
      description: "Add grant to a `Project`.\n"
      operationId: "setProjectGrant"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "grant_id"
        in: "path"
        description: "The grant_id"
        required: true
        type: "string"
      responses:
        200:
          description: "The id associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Modify grant of a `Project`.\n"
      operationId: "modifyProjectGrant"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "grant_id"
        in: "path"
        description: "The grant_id"
        required: true
        type: "string"
      responses:
        200:
          description: "The id associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/grant_type:
    get:
      description: "Retrieve project_main_grant_type associated with a `Project`.\n"
      operationId: "getProjectGrantTypeById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The project_main_grant_type"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete project_main_grant_type from a project\n"
      operationId: "deleteProjectGrantType"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_main_grant_type` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/grant_type/{project_main_grant_type}:
    post:
      description: "Add project_name to a `Project`.\n"
      operationId: "setProjectGrantType"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "project_main_grant_type"
        in: "path"
        description: "The project_main_grant_type"
        required: true
        type: "string"
      responses:
        200:
          description: "The id associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Modify project_name of a `Project`.\n"
      operationId: "modifyProjectGrantType"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "project_main_grant_type"
        in: "path"
        description: "The project_main_grant_type"
        required: true
        type: "string"
      responses:
        200:
          description: "The id associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/keys:
    get:
      description: "Get keywords of a `Project`.\n"
      operationId: "getAllProjectKeywords"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `keywords` associated with the `Project`"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Set keywords of a `Project`.\n"
      operationId: "setAllProjectKeywords"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "keywords"
        in: "formData"
        description: "The `keywords` of the `Project``"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add to keywords of a `Project`.\n"
      operationId: "addProjectKeywords"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "keywords"
        in: "formData"
        description: "The `ids` of the collaborators"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove all 'keywords' from a `Project`.\n"
      operationId: "deleteProjectKeywords"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/keys/{keyword}:
    post:
      description: "Set keyword of a `Project`.\n"
      operationId: "setProjectKeyword"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "keyword"
        in: "path"
        description: "The `keyword`"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add to keyword of a `Project`.\n"
      operationId: "addProjectKeyword"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "keyword"
        in: "path"
        description: "The keyword"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove a 'keyword' from a `Project`.\n"
      operationId: "deleteProjectKeyword"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "keyword"
        in: "path"
        description: "The keyword"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/name/{project_name}:
    post:
      description: "Add project_name to a `Project`.\n"
      operationId: "addProjectName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "project_name"
        in: "path"
        description: "The project_name"
        required: true
        type: "string"
      responses:
        200:
          description: "The id associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Modify project_name of a `Project`.\n"
      operationId: "modifyProjectName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "project_name"
        in: "path"
        description: "The project_name"
        required: true
        type: "string"
      responses:
        200:
          description: "The id associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/posts:
    get:
      description: "Get posts of a `Project`.\n"
      operationId: "getAllProjectPosts"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `reviews` associated with the `Project`"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Post"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Set posts of a `Project`.\n"
      operationId: "setAllProjectPosts"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "posts"
        in: "formData"
        description: "The `ids` of the posts"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add to posts of a `Project`.\n"
      operationId: "addProjectPosts"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "reviews"
        in: "formData"
        description: "The `ids` of the posts"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove all 'posts' from a `Project`.\n"
      operationId: "deleteProjectPosts"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/posts/{post_id}:
    get:
      description: "Get reviews of a `Project`.\n"
      operationId: "getProjectPost"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "post_id"
        in: "path"
        description: "The `id` of the post"
        required: true
        type: "string"
      responses:
        200:
          description: "The post"
          schema:
            $ref: "#/definitions/Post"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add post to a `Project`.\n"
      operationId: "addProjectPost"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "post_id"
        in: "path"
        description: "The `id` of the post"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove a 'post' from a `Project`.\n"
      operationId: "deleteProjectPost"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "post_id"
        in: "path"
        description: "The `ids` of the post"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/private:
    get:
      description: "Retrieve is_private from a  `Project`.\n"
      operationId: "isProjectPrivate"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The boolean"
          schema:
            type: "boolean"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Set is_private from a  `Project`.\n"
      operationId: "setIsProjectPrivate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "is_private"
        in: "formData"
        description: "is project private?"
        required: true
        type: "boolean"
      responses:
        200:
          description: "The boolean"
          schema:
            type: "boolean"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/project_name:
    get:
      description: "Retrieve project_name associated with a `Project`.\n"
      operationId: "getProjectNameById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The project_name"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete project_name from a project\n"
      operationId: "deleteUserProjectName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_name` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/reviews:
    get:
      description: "Get reviews of a `Project`.\n"
      operationId: "getAllProjectReviews"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `reviews` associated with the `Project`"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Review"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Set reviews of a `Project`.\n"
      operationId: "setAllProjectReviews"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "reviews"
        in: "formData"
        description: "The `ids` of the reviews"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add to reviews of a `Project`.\n"
      operationId: "addProjectReviews"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "reviews"
        in: "formData"
        description: "The `ids` of the reviews"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove all 'reviews' from a `Project`.\n"
      operationId: "deleteProjectReviews"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/reviews/{review_id}:
    get:
      description: "Get reviews of a `Project`.\n"
      operationId: "getProjectReview"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "review_id"
        in: "path"
        description: "The `id` of the review"
        required: true
        type: "string"
      responses:
        200:
          description: "The review"
          schema:
            $ref: "#/definitions/Review"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add review to a `Project`.\n"
      operationId: "addProjectReview"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "review_id"
        in: "path"
        description: "The `id` of the review"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove a 'review' from a `Project`.\n"
      operationId: "deleteProjectReview"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "review_id"
        in: "path"
        description: "The `ids` of the review"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/uni:
    get:
      description: "Retrieve universities associated with a `Project`.\n"
      operationId: "getUniversitiesById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The grant"
          schema:
            $ref: "#/definitions/University"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete all universities from a project\n"
      operationId: "deleteProjecUniversities"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/uni/{university_id}:
    post:
      description: "Set university_id to a `Project`.\n"
      operationId: "setProjectUniversity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "university_id"
        in: "path"
        description: "The university_id"
        required: true
        type: "string"
      responses:
        200:
          description: "The id associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Modify university_id of a `Project`.\n"
      operationId: "modifyProjectUniversity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "university_id"
        in: "path"
        description: "The university_id"
        required: true
        type: "string"
      responses:
        200:
          description: "The id associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Project/{id}/urls:
    get:
      description: "Get urls of a `Project`.\n"
      operationId: "getAllProjectUrls"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `urls` associated with the `Project`"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Set urls of a `Project`.\n"
      operationId: "setAllProjectUrls"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "urls"
        in: "formData"
        description: "The `urls` of the project"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Add to urls of a `Project`.\n"
      operationId: "addProjectUrls"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      - name: "urls"
        in: "formData"
        description: "The `urls` of the `Project``"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove all 'urls' from a `Project`.\n"
      operationId: "deleteProjectUrls"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Projects:
    get:
      tags:
      - "Projects"
      description: "Gets `Project` objects.\nRequired query param of **size** determines\n\
        max number of results per page, and **page** determines\nwhich page in the\
        \ pagination we are. Remaining params optional.\n"
      operationId: "getProjects"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "size"
        in: "formData"
        description: "Max size of array to return"
        required: true
        type: "number"
        format: "int32"
      - name: "page"
        in: "formData"
        description: "Location in pagination"
        required: true
        type: "number"
        format: "int32"
      - name: "project_id"
        in: "formData"
        description: "Unique identifier representing a specific project"
        required: false
        type: "string"
      - name: "created_date"
        in: "formData"
        description: "datetime stamp of project creation"
        required: false
        type: "string"
        format: "date-time"
      - name: "updated_date"
        in: "formData"
        description: "datetime stamp of project update"
        required: false
        type: "string"
        format: "date-time"
      - name: "project_name"
        in: "formData"
        description: "Project's name"
        required: false
        type: "string"
      - name: "project_main_grant_type"
        in: "formData"
        description: "Project's grant type"
        required: false
        type: "string"
      - name: "project_description"
        in: "formData"
        description: "Description of project"
        required: false
        type: "string"
      - name: "project_creator_id"
        in: "formData"
        description: "array of project creator ids"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "project_collaborators_id"
        in: "formData"
        description: "array of project collaborator ids"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "project_keywords"
        in: "formData"
        description: "array of project keywords"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "project_urls"
        in: "formData"
        description: "array of project URLs"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "grant_id"
        in: "formData"
        description: "Grant ID"
        required: false
        type: "string"
      - name: "university_id"
        in: "formData"
        description: "ID of university hosting research"
        required: false
        type: "string"
      - name: "grant_facilitator"
        in: "formData"
        description: "Name of individual fascilitating grant funding"
        required: false
        type: "string"
      - name: "project_file"
        in: "formData"
        description: "files for grant"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "reviews"
        in: "formData"
        description: "reviews"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "posts"
        in: "formData"
        description: "posts related to project"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "is_project_private"
        in: "formData"
        description: "is project private?"
        required: false
        type: "boolean"
      responses:
        200:
          description: "An array of projects"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Projects"
  /Projects/collaborator/{user_id}:
    get:
      description: "Retrieve `Project` objects by a particular collaborator `User`\n"
      operationId: "getProjectsByCollaboratorId"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ID of 'User' to fetch"
        required: true
        type: "string"
      responses:
        200:
          description: "projects response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Projects/created_date:
    get:
      description: "Retrieve `Project` objects created on or later than given date\n"
      operationId: "getProjectsByCreatedDateForm"
      produces:
      - "application/json"
      parameters:
      - name: "created_date"
        in: "formData"
        description: "date of creation"
        required: true
        type: "string"
        format: "date-time-time"
      responses:
        200:
          description: "projects response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Projects/created_date/{created_date}:
    get:
      description: "Retrieve `Project` objects created on or later than given date\n"
      operationId: "getProjectsByCreatedDate"
      produces:
      - "application/json"
      parameters:
      - name: "created_date"
        in: "path"
        description: "date of creation"
        required: true
        type: "string"
      responses:
        200:
          description: "projects response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Projects/creator/{user_id}:
    get:
      description: "Retrieve `Project` objects by a particular creator `User`\n"
      operationId: "getProjectsByCreatorId"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ID of 'User' to fetch"
        required: true
        type: "string"
      responses:
        200:
          description: "projects response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Projects/grant/{grant_id}:
    get:
      description: "Retrieve `Project` objects associated with a particular `Grant`\n"
      operationId: "getProjectsByGrantId"
      produces:
      - "application/json"
      parameters:
      - name: "grant_id"
        in: "path"
        description: "ID of 'User' to fetch"
        required: true
        type: "string"
      responses:
        200:
          description: "projects response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Projects/modified_date:
    get:
      description: "Retrieve `Project` objects modified on or later than given date\n"
      operationId: "getProjectsByModifiedDateForm"
      produces:
      - "application/json"
      parameters:
      - name: "modified_date"
        in: "formData"
        description: "date modified"
        required: true
        type: "string"
      responses:
        200:
          description: "projects response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Projects/modified_date/{modified_date}:
    get:
      description: "Retrieve `Project` objects modified on or later than given date\n"
      operationId: "getProjectsByModifiedDate"
      produces:
      - "application/json"
      parameters:
      - name: "modified_date"
        in: "path"
        description: "date modified"
        required: true
        type: "string"
      responses:
        200:
          description: "projects response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Projects/uni/{university_id}:
    get:
      description: "Retrieve `Project` objects at a particular `University`\n"
      operationId: "getProjectsByUniversityId"
      produces:
      - "application/json"
      parameters:
      - name: "university_id"
        in: "path"
        description: "ID of 'User' to fetch"
        required: true
        type: "string"
      responses:
        200:
          description: "users response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User:
    post:
      tags:
      - "User"
      description: "Creates `User` objects. `University` and `Project` are optional\
        \ (user may not yet have affiliations)\n`Keywords` also optional. All other\
        \ fields required.\n"
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "first_name"
        in: "formData"
        description: "first name of `User`"
        required: true
        type: "string"
      - name: "last_name"
        in: "formData"
        description: "last name of `User`"
        required: true
        type: "string"
      - name: "is_collaborator"
        in: "formData"
        description: "is `User` a collaborator?"
        required: true
        type: "boolean"
      - name: "is_creator"
        in: "formData"
        description: "is `User` a creator?"
        required: true
        type: "boolean"
      - name: "city"
        in: "formData"
        description: "city location of `User`"
        required: true
        type: "string"
      - name: "state"
        in: "formData"
        description: "state location of `User`"
        required: true
        type: "string"
      - name: "university_ids"
        in: "formData"
        description: "university a `User` is associated with"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      - name: "project_id"
        in: "formData"
        description: "project_id the `User` is associated with"
        required: false
        type: "string"
      - name: "keywords"
        in: "formData"
        description: "keyword"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` of the created user"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
  /User/{id}:
    get:
      description: "Retrieve a 'User' by their id.\n"
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "the `id` of the `User` to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` of the deleted `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      tags:
      - "User"
      description: "Updates a `User` object. All fields other than `id` optional.\n"
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of `User` to fetch"
        required: true
        type: "string"
      - name: "first_name"
        in: "formData"
        description: "first name of `User`"
        required: false
        type: "string"
      - name: "last_name"
        in: "formData"
        description: "last name of `User`"
        required: false
        type: "string"
      - name: "is_collaborator"
        in: "formData"
        description: "is `User` a collaborator?"
        required: false
        type: "boolean"
      - name: "is_creator"
        in: "formData"
        description: "is `User` a creator?"
        required: false
        type: "boolean"
      - name: "city"
        in: "formData"
        description: "city location of `User`"
        required: false
        type: "string"
      - name: "state"
        in: "formData"
        description: "state location of `User`"
        required: false
        type: "string"
      - name: "university"
        in: "formData"
        description: "university a `User` is associated with"
        required: false
        type: "string"
      - name: "project_id"
        in: "formData"
        description: "project_id the `User` is associated with"
        required: false
        type: "string"
      - name: "keywords"
        in: "formData"
        description: "keyword"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `id` of the updatee `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
    delete:
      description: "Delete a 'User' by their id.\n"
      operationId: "deleteUserById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "the `id` of the `User` to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "The `id` of the deleted `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/city:
    get:
      description: "Retrieve city associated with a `User`.\n"
      operationId: "getCityNameById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The city"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete city from a user\n"
      operationId: "deleteUserCity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/city/{city}:
    post:
      description: "Add city to a `User`.\n"
      operationId: "addUserCity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "city"
        in: "path"
        description: "The city"
        required: true
        type: "string"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Modify city of a `User`.\n"
      operationId: "modifyUserCity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "city"
        in: "path"
        description: "The city"
        required: true
        type: "string"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/collaborator:
    get:
      description: "Retrieve if `User` is a collaborator.\n"
      operationId: "isCollaboratorById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "An array of keywords"
          schema:
            type: "boolean"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "set if `User` is a collaborator.\n"
      operationId: "setIsUserCollaboratorById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "isCollaborator"
        in: "formData"
        description: "Is user a collaborator?"
        required: true
        type: "boolean"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "set if `User` is a collaborator.\n"
      operationId: "setIsUserCollaboratorByIdPut"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "isCollaborator"
        in: "formData"
        description: "Is user a collaborator?"
        required: true
        type: "boolean"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/created:
    get:
      description: "Retrieve creation date of a `User`.\n"
      operationId: "getCreatedDateById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The date"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/creator:
    get:
      description: "Retrieve if `User` is a creator.\n"
      operationId: "isCreatorById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "An array of keywords"
          schema:
            type: "boolean"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "set if `User` is a creator.\n"
      operationId: "setIsUserCreatorById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "isCreator"
        in: "formData"
        description: "Is user a creator?"
        required: true
        type: "boolean"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "set if `User` is a creator.\n"
      operationId: "setIsUserCreatorByIdPut"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "isCollaborator"
        in: "formData"
        description: "Is user a creator?"
        required: true
        type: "boolean"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/first_name:
    get:
      description: "Retrieve first name associated with a `User`.\n"
      operationId: "getFirstNameById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "An array of keywords"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete first_name from a user\n"
      operationId: "deleteUserFirstName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/first_name/{first_name}:
    post:
      description: "Add first name to a `User`.\n"
      operationId: "addUserFirstName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "first_name"
        in: "path"
        description: "The keywords"
        required: true
        type: "string"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Modify first name of a `User`.\n"
      operationId: "modifyUserFirstName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "first_name"
        in: "path"
        description: "The keywords"
        required: true
        type: "string"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/images:
    get:
      description: "Retrieve all images associated with a `User`.\n"
      operationId: "getAllUserImages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The image url associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Add images to a `User`.\n"
      operationId: "setUserImages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "images"
        in: "formData"
        description: "The paths of the images"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove an image, or multiple images, from a `User`.\n"
      operationId: "deleteImagesFromUserById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "images"
        in: "formData"
        description: "The paths of the images"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/keys:
    get:
      description: "Retrieve all keywords associated with a `User`.\n"
      operationId: "getAllUserKeywords"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "An array of keywords"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Add keywords to a `User`.\n"
      operationId: "setUserKeywords"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "keywords"
        in: "formData"
        description: "The keywords"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete keywords from a user\n"
      operationId: "deleteKeywordsFromUserById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/keys/{keyword}:
    post:
      description: "Add a keyword to a `User`.\n"
      operationId: "setUserKeyword"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "keyword"
        in: "path"
        description: "The keyword"
        required: true
        type: "string"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete keyword from a user\n"
      operationId: "deleteKeywordFromUserById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "keyword"
        in: "path"
        description: "The keyword"
        required: true
        type: "string"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/last_name:
    get:
      description: "Retrieve first name associated with a `User`.\n"
      operationId: "getLastNameById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "An array of keywords"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete last_name from a user\n"
      operationId: "deleteUserLastName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/last_name/{last_name}:
    post:
      description: "Add last name to a `User`.\n"
      operationId: "addUserLastName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "last_name"
        in: "path"
        description: "The keywords"
        required: true
        type: "string"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Modify last name of a `User`.\n"
      operationId: "modifyUserLastName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "last_name"
        in: "path"
        description: "The keywords"
        required: true
        type: "string"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/modified:
    get:
      description: "Retrieve modified date of a `User`.\n"
      operationId: "getModifiedDateById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The date"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/project:
    get:
      description: "Retrieve all 'Project' associated with a `User`.\n"
      operationId: "getAllUserProjectById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `Project` associated with the `User`"
          schema:
            $ref: "#/definitions/Project"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove all 'Project' ojects from a `User`.\n"
      operationId: "deleteAllUserProjectById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/project/{project_id}:
    get:
      description: "Retrieve a 'Project' associated with a `User`.\n"
      operationId: "getUserProjectById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "project_id"
        in: "path"
        description: "The `project_id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `Project` associated with the `User`"
          schema:
            $ref: "#/definitions/Project"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Add a 'Project' to a `User`.\n"
      operationId: "settUserProjectById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "project_id"
        in: "path"
        description: "The `project_id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove a 'Project' from a `User`.\n"
      operationId: "deleteUserProjectById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "project_id"
        in: "path"
        description: "The `project_id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/review:
    get:
      description: "Retrieve all 'Review' associated with a `User`.\n"
      operationId: "getAllUserReviewById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "An array of reviews"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Review"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove all 'Review' ojects from a `User`.\n"
      operationId: "deleteAllUserReviewById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/review/{review_id}:
    get:
      description: "Retrieve a 'Review' associated with a `User`.\n"
      operationId: "getUserReviewById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "review_id"
        in: "path"
        description: "The `review_id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `Review` associated with the `User`"
          schema:
            $ref: "#/definitions/Review"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Add a 'Review' to a `User`.\n"
      operationId: "setUserReviewById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "review_id"
        in: "path"
        description: "The `review_id` of the `Review` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `review_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove a 'Review' from a `User`.\n"
      operationId: "deleteUserReviewById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "review_id"
        in: "path"
        description: "The `review_id` of the `Review` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `review_id` associated with the `Review`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/state:
    get:
      description: "Retrieve state associated with a `User`.\n"
      operationId: "getStateById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The state"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete state from a user\n"
      operationId: "deleteUserState"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `user_id` associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/state/{state}:
    post:
      description: "Add state to a `User`.\n"
      operationId: "addUserState"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "state"
        in: "path"
        description: "The state"
        required: true
        type: "string"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Modify state of a `User`.\n"
      operationId: "modifyUserState"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "state"
        in: "path"
        description: "The state"
        required: true
        type: "string"
      responses:
        200:
          description: "The user_id associated with the `User`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /User/{id}/uni/{university_id}:
    get:
      description: "Retrieve a 'University' associated with a `User`.\n"
      operationId: "getUserUniversityById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "university_id"
        in: "path"
        description: "The `university_id` of the `University` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `University` associated with the `User`"
          schema:
            $ref: "#/definitions/University"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    post:
      description: "Add a 'University' to a `User`.\n"
      operationId: "settUserUniversityById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "university_id"
        in: "path"
        description: "The `university_id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `university_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    delete:
      description: "Remove a 'University' fromo a `User`.\n"
      operationId: "deleteUserUniversityById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The `id` of the `User` to retrieve"
        required: true
        type: "string"
      - name: "university_id"
        in: "path"
        description: "The `university_id` of the `Project` to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "The `project_id` associated with the `Project`"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Users:
    get:
      tags:
      - "Users"
      description: "Gets `User` objects.\nRequired query param of **size** determines\n\
        max number of results per page, and **page** determines\nwhich page in the\
        \ pagination we are. Remaining params optional.\n"
      operationId: "getUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "size"
        in: "formData"
        description: "Max size of array to return"
        required: true
        type: "number"
        format: "int32"
      - name: "page"
        in: "formData"
        description: "Location in pagination"
        required: true
        type: "number"
        format: "int32"
      - name: "first_name"
        in: "formData"
        description: "first name of user"
        required: false
        type: "string"
      - name: "last_name"
        in: "formData"
        description: "last name of user"
        required: false
        type: "string"
      - name: "is_collaborator"
        in: "formData"
        description: "is user a collaborator?"
        required: false
        type: "boolean"
      - name: "is_creator"
        in: "formData"
        description: "is user a creator?"
        required: false
        type: "boolean"
      - name: "city"
        in: "formData"
        description: "city location of user"
        required: false
        type: "string"
      - name: "state"
        in: "formData"
        description: "state location of user"
        required: false
        type: "string"
      - name: "university_ids"
        in: "formData"
        description: "universities a user is associated with"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      - name: "project_id"
        in: "formData"
        description: "project_id the user is associated with"
        required: false
        type: "string"
      - name: "created_date"
        in: "formData"
        description: "date the user was created"
        required: false
        type: "string"
      - name: "modified_date"
        in: "formData"
        description: "date the user was modified"
        required: false
        type: "string"
      - name: "keywords"
        in: "formData"
        description: "keyword"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "An array of users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Users"
  /Users/created:
    get:
      description: "Retrieve `User` objects created on or after the given date2\n"
      operationId: "getUsersByCreatedDateForm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "created_date"
        in: "formData"
        description: "Date that `User` object was created"
        required: true
        type: "string"
        format: "date-time"
      responses:
        200:
          description: "users response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Users/created/{created_date}:
    get:
      description: "Retrieve `User` objects created on or after the given date\n"
      operationId: "getUsersByCreatedDate"
      produces:
      - "application/json"
      parameters:
      - name: "created_date"
        in: "path"
        description: "Date that `User` object was created"
        required: true
        type: "string"
      responses:
        200:
          description: "users response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Users/keys:
    get:
      description: "Retrieve `User` objects based on keywords\n"
      operationId: "getUsersByKeywords"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "keywords"
        in: "formData"
        description: "Keywords when searching for user"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      responses:
        200:
          description: "users response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Users/modified/{modified_date}:
    get:
      description: "Retrieve `User` objects created on or after the given date\n"
      operationId: "getUsersByModifiedDate"
      produces:
      - "application/json"
      parameters:
      - name: "modified_date"
        in: "path"
        description: "Date that `User` object was modified"
        required: true
        type: "string"
      responses:
        200:
          description: "users response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Users/modified_date:
    get:
      description: "Retrieve `User` objects created on or after the given date\n"
      operationId: "getUsersByModifiedDateForm"
      produces:
      - "application/json"
      parameters:
      - name: "modified_date"
        in: "formData"
        description: "Date that `User` object was modified"
        required: true
        type: "string"
        format: "date-time"
      responses:
        200:
          description: "users response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Users/projects/{project_id}:
    get:
      description: "Retrieve `User` objects on a particular `Project`\n"
      operationId: "getUsersByProjectId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "project_id"
        in: "path"
        description: "ID of 'Project' to fetch"
        required: true
        type: "string"
      - name: "max"
        in: "formData"
        description: "max num of 'User' to fetch"
        required: true
        type: "number"
        format: "int32"
      - name: "page"
        in: "formData"
        description: "page in pagination"
        required: true
        type: "number"
        format: "int32"
      responses:
        200:
          description: "users response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /Users/uni/{university_id}:
    get:
      description: "Retrieve `User` objects at a particular `University`\n"
      operationId: "getUsersByUniversityId"
      produces:
      - "application/json"
      parameters:
      - name: "university_id"
        in: "path"
        description: "ID of 'User' to fetch"
        required: true
        type: "string"
      - name: "max"
        in: "formData"
        description: "max num of 'User' to fetch"
        required: true
        type: "number"
        format: "int32"
      - name: "page"
        in: "formData"
        description: "page in pagination"
        required: true
        type: "number"
        format: "int32"
      responses:
        200:
          description: "users response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
definitions:
  User:
    type: "object"
    properties:
      user_id:
        type: "string"
        description: "Unique identifier representing a specific user"
      first_name:
        type: "string"
        description: "User's first name."
      last_name:
        type: "string"
        description: "User's last name"
      is_creator:
        type: "boolean"
        description: "Is user a project creator?"
      is_collaborator:
        type: "boolean"
        description: "Is user a project collaborator?"
      profile_images:
        type: "array"
        description: "Array of file system paths to profile images"
        items:
          type: "string"
      created_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of user creation"
      updated_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of user update"
      geolocation:
        type: "array"
        description: "Tuple representing latitude/longitude of user"
        items:
          type: "number"
          format: "double"
      city:
        type: "string"
        description: "City of user location"
      state:
        type: "string"
        description: "State of user location"
      recent_collaborators_id:
        type: "array"
        description: "array of user_ids of recent collaborators"
        items:
          type: "string"
      university_ids:
        type: "array"
        description: "array of universities the user is associated with"
        items:
          type: "string"
      project_ids:
        type: "array"
        description: "array of user projects"
        items:
          type: "string"
      keywords:
        type: "array"
        description: "array of keywords associated with the user"
        items:
          type: "string"
      review_ids:
        type: "array"
        description: "array of review ids"
        items:
          type: "string"
      is_user_private:
        type: "boolean"
        description: "is user profile public or private?"
  Users:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
        description: "Position in pagination."
      limit:
        type: "integer"
        format: "int32"
        description: "Number of items to retrieve (100 max)."
      count:
        type: "integer"
        format: "int32"
        description: "Total number of items available."
      history:
        type: "array"
        items:
          $ref: "#/definitions/User"
  Project:
    type: "object"
    properties:
      project_id:
        type: "string"
        description: "Unique identifier representing a specific project"
      created_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of project creation"
      updated_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of project update"
      project_name:
        type: "string"
        description: "Project's name"
      project_main_grant_type:
        type: "string"
        description: "Project's grant type"
      project_description:
        type: "string"
        description: "Description of project"
      project_creator_id:
        type: "array"
        description: "array of project creator ids"
        items:
          type: "string"
      project_collaborators_id:
        type: "array"
        description: "array of project collaborator ids"
        items:
          type: "string"
      project_keywords:
        type: "array"
        description: "array of project keywords"
        items:
          type: "string"
      project_urls:
        type: "array"
        description: "array of project URLs"
        items:
          type: "string"
      grant_id:
        type: "string"
        description: "Grant ID"
      university_id:
        type: "string"
        description: "ID of university hosting research"
      grant_facilitator:
        type: "string"
        description: "Name of individual fascilitating grant funding"
      project_file:
        type: "array"
        description: "files for grant"
        items:
          type: "string"
      reviews:
        type: "array"
        description: "reviews"
        items:
          type: "string"
      posts:
        type: "array"
        description: "posts related to project"
        items:
          type: "string"
      is_project_private:
        type: "boolean"
        description: "is project private?"
  Projects:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
        description: "Position in pagination."
      limit:
        type: "integer"
        format: "int32"
        description: "Number of items to retrieve (100 max)."
      count:
        type: "integer"
        format: "int32"
        description: "Total number of items available."
      history:
        type: "array"
        items:
          $ref: "#/definitions/Project"
  Post:
    type: "object"
    properties:
      post_id:
        type: "string"
        description: "id of post"
      created_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of post creation"
      updated_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of post update"
      post_title:
        type: "string"
        description: "title of post"
      post_text:
        type: "string"
        description: "text of post"
      post_keywords:
        type: "array"
        description: "keywords for post"
        items:
          type: "string"
      post_author:
        description: "author of post"
        $ref: "#/definitions/User"
      post_author_id:
        type: "string"
        description: "id of author of post"
      post_tags:
        type: "array"
        description: "tagged users"
        items:
          $ref: "#/definitions/User"
      post_tags_id:
        type: "array"
        description: "tagged user ids"
        items:
          type: "string"
      is_post_private:
        type: "boolean"
        description: "is post private?"
  Posts:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
        description: "Position in pagination."
      limit:
        type: "integer"
        format: "int32"
        description: "Number of items to retrieve (100 max)."
      count:
        type: "integer"
        format: "int32"
        description: "Total number of items available."
      history:
        type: "array"
        items:
          $ref: "#/definitions/Post"
  Grant:
    type: "object"
    properties:
      grant_id:
        type: "string"
        description: "id of grant"
      created_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of grant creation"
      updated_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of grant update"
      grant_url:
        type: "array"
        description: "URL of grants"
        items:
          type: "string"
      grant_description:
        type: "string"
        description: "Grant description"
      grant_amount:
        type: "number"
        format: "double"
        description: "Amount of grant"
  Grants:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
        description: "Position in pagination."
      limit:
        type: "integer"
        format: "int32"
        description: "Number of items to retrieve (100 max)."
      count:
        type: "integer"
        format: "int32"
        description: "Total number of items available."
      history:
        type: "array"
        items:
          $ref: "#/definitions/Grant"
  Review:
    type: "object"
    properties:
      review_id:
        type: "string"
        description: "id of review"
      created_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of review creation"
      updated_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of review update"
      review_body:
        type: "string"
        description: "text body of review"
      reviewer:
        description: "reviewer user"
        $ref: "#/definitions/User"
      reviewer_id:
        type: "string"
        description: "reviewer user id"
      rating:
        type: "integer"
        format: "int32"
        description: "rating, must be 1-5"
  Reviews:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
        description: "Position in pagination."
      limit:
        type: "integer"
        format: "int32"
        description: "Number of items to retrieve (100 max)."
      count:
        type: "integer"
        format: "int32"
        description: "Total number of items available."
      history:
        type: "array"
        items:
          $ref: "#/definitions/Review"
  Skill:
    type: "object"
    properties:
      review_id:
        type: "string"
        description: "id of skill"
      created_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of skill creation"
      updated_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of skill update"
      description:
        type: "string"
        description: "text body of skill"
      endorsements_id:
        type: "array"
        description: "ids of users who have endorsed the user for this skill"
        items:
          type: "string"
  Skills:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
        description: "Position in pagination."
      limit:
        type: "integer"
        format: "int32"
        description: "Number of items to retrieve (100 max)."
      count:
        type: "integer"
        format: "int32"
        description: "Total number of items available."
      history:
        type: "array"
        items:
          $ref: "#/definitions/Skill"
  University:
    type: "object"
    properties:
      uni_id:
        type: "string"
        description: "id of `University`"
      created_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of `University` creation"
      updated_date:
        type: "string"
        format: "date-time"
        description: "datetime stamp of `University` update"
      university_name:
        type: "string"
        description: "text body of `University`"
      profile_images:
        type: "array"
        description: "Array of file system paths to profile images"
        items:
          type: "string"
      geolocation:
        type: "array"
        description: "Tuple representing latitude/longitude of user"
        items:
          type: "number"
          format: "double"
      city:
        type: "string"
        description: "City of `University` location"
      state:
        type: "string"
        description: "State of `University` location"
      project_ids:
        type: "array"
        description: "ids of `Project`s based at this `University`"
        items:
          type: "string"
  Universities:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
        description: "Position in pagination."
      limit:
        type: "integer"
        format: "int32"
        description: "Number of items to retrieve (100 max)."
      count:
        type: "integer"
        format: "int32"
        description: "Total number of items available."
      history:
        type: "array"
        items:
          $ref: "#/definitions/University"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      fields:
        type: "string"
